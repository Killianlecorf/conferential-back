#!/bin/sh

set -e

echo "‚è≥ Attente que PostgreSQL soit pr√™t..."

until PGPASSWORD="$DATABASE_PASS" psql -h "$DATABASE_HOST" -U "$DATABASE_USER" -d postgres -c '\q' 2>/dev/null; do
  echo "üîÑ PostgreSQL indisponible - en attente..."
  sleep 2
done

echo "‚úÖ PostgreSQL est pr√™t !"

DB_EXIST=$(PGPASSWORD="$DATABASE_PASS" psql -h "$DATABASE_HOST" -U "$DATABASE_USER" -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname = '$DATABASE_NAME'")

if [ "$DB_EXIST" = "1" ]; then
  echo "üìÇ La base de donn√©es \"$DATABASE_NAME\" existe d√©j√†."
else
  echo "üÜï La base de donn√©es \"$DATABASE_NAME\" n'existe pas. Cr√©ation..."
  PGPASSWORD="$DATABASE_PASS" createdb -h "$DATABASE_HOST" -U "$DATABASE_USER" "$DATABASE_NAME"
  echo "‚úÖ Base de donn√©es \"$DATABASE_NAME\" cr√©√©e avec succ√®s."
fi

echo "üîÅ Lancement des migrations..."
npm run migration:up

echo "‚ûï V√©rification de l'existence de l'utilisateur admin..."

USER_EXISTS=$(PGPASSWORD="$DATABASE_PASS" psql -h "$DATABASE_HOST" -U "$DATABASE_USER" -d "$DATABASE_NAME" -tAc "SELECT 1 FROM \"user\" WHERE email = 'admin@admin.fr'")

if [ "$USER_EXISTS" = "1" ]; then
  echo "‚úÖ Utilisateur admin d√©j√† pr√©sent."
else
  echo "‚ûï Insertion de l'utilisateur admin..."
  PGPASSWORD="$DATABASE_PASS" psql -h "$DATABASE_HOST" -U "$DATABASE_USER" -d "$DATABASE_NAME" <<EOF
INSERT INTO "user" (full_name, email, password, is_sponsor, is_admin, created_at, updated_at)
VALUES (
  'Admin',
  'admin@admin.fr',
  '\$2b\$10\$xy.QkVMTI9XKjuHgsnW8KualEl1.nkH2P91chNY4C3cMEgEj29YCC',
  true,
  true,
  NOW(),
  NOW()
)
ON CONFLICT (email) DO NOTHING;
EOF
  echo "‚úÖ Utilisateur admin ajout√©."
fi

echo "üöÄ Lancement du serveur..."
npm start
